stages: # List of stages for jobs, and their order of execution
  # - test
  - deploy

# test frontend and backend:
#   resource_group: all
#   image: node:20.17.0
#   stage: test
#   cache:
#     key: frontend-cache
#     paths:
#       - frontend/node_modules
#     key: backend-cache
#     paths:
#       - backend/node_modules
#   script:
#     - cd backend
#     - npm install
#     - npm run check
#     - npm run test
#     - cd ../frontend
#     - npm install
#     - npm run check
#     - npm run test

# test code-runner:
#   resource_group: all
#   image: rust:1.81
#   stage: test
#   # cache:
#   #   key: code-runner-cache
#   #   paths:
#   #     - code-runner/target
#   script:
#     - cd code-runner
#     - cargo build --verbose
#     - cargo test --verbose

deploy:
  resource_group: all
  image: docker:27-cli
  stage: deploy

  before_script:
    # Install ssh-agent if not already installed, it is required by Docker.

    # - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored at SSH_KEY path to the agent store
    - chmod 400 "$SSH_KEY"
    - ssh-add "$SSH_KEY"

    # Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    # Disable host key checking
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config

  script:
    - docker context create kodekamp --docker "host=ssh://${MANAGER_HOST}"
    - docker context use kodekamp
    - docker compose build
    - docker compose push
    - docker stack deploy -c ./compose.yaml --detach=false kodekamp
